@page "/counter"
@rendermode InteractiveServer
@using BlazorPopUpOnLoadPoC.Components.Common
@using System.Timers
@using BlazorPopUpOnLoadPoC.Misc
@inject NavigationManager NavigationManager
@inject SpinnerService _spinnerService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="Success">Success me</button>
<button class="btn btn-primary" @onclick="Error">Error me</button>
<button class="btn btn-primary" @onclick="Info">Info me</button>
<p> sticky:</p>
@* <Popup @ref="popupRef" /> *@

<button class="btn btn-primary" @onclick="SuccessSticky">Success me</button>
<button class="btn btn-primary" @onclick="ErrorSticky">Error me</button>
<button class="btn btn-primary" @onclick="InfoSticky">Info me</button>

<button class="btn btn-primary" @onclick="Save" disabled="@saving">Save and redirection</button>
@if (saving)
{
    <p>it is saving</p>    
}
else
{
    <p>It is NOT saving</p>
}

@code {
    private int currentCount = 0;
    //private Popup popupRef = new Popup();
    private bool saving = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
                _spinnerService.ToastShow("message here", "title here", ToastType.Success, false);

                StateHasChanged();
        }
    }


    private void Success()
    {
        currentCount++;
        //popupRef.Show("message here", "title here");
    }

    private void Error()
    {
        currentCount++;
        //popupRef.Show("message here", "title here", ToastType.Error);
    }

    private void Info()
    {
        currentCount++;
        //popupRef.Show("message here", "title here", ToastType.Info);
    }

    private void SuccessSticky()
    {
        currentCount++;
        //popupRef.Show("message here", "title here", ToastType.Success, true);
    }

    private void ErrorSticky()
    {
        currentCount++;
        //popupRef.Show("message here", "title here", ToastType.Error, true);
    }

    private void InfoSticky()
    {
        currentCount++;
        _spinnerService.ToastShow("message here", "title here", ToastType.Info, true);
    }

    private async Task Save()
    {
        saving = true;
        _spinnerService.Show();
        
         await Task.Delay(5000);
         NavigationManager.NavigateTo("Home");
         _spinnerService.Hide();
    }
}
