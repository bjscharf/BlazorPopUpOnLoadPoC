@page "/counter"
@rendermode InteractiveServer
@using BlazorPopUpOnLoadPoC.Components.Common
@using System.Timers
@using BlazorPopUpOnLoadPoC.Misc
@inject NavigationManager NavigationManager
@inject BaseService _baseService

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="Success">Success me</button>
<button class="btn btn-primary" @onclick="Error">Error me</button>
<button class="btn btn-primary" @onclick="Info">Info me</button>
<p> sticky:</p>

<button class="btn btn-primary" @onclick="SuccessSticky">Success me</button>
<button class="btn btn-primary" @onclick="ErrorSticky">Error me</button>
<button class="btn btn-primary" @onclick="InfoSticky">Info me</button>

<button class="btn btn-primary" @onclick="Save">Save and redirection</button>

@code {
    private int currentCount = 0;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
                _baseService.ToastShow("message here", "title here", ToastType.Success, false);

                StateHasChanged();
        }
    }


    private void Success()
    {
        currentCount++;
        _baseService.ToastShow("message here", "title here", ToastType.Success, false);
    }

    private void Error()
    {
        currentCount++;
        _baseService.ToastShow("message here", "title here", ToastType.Danger, false);
    }

    private void Info()
    {
        currentCount++;
        _baseService.ToastShow("message here", "title here", ToastType.Info, false);
    }

    private void SuccessSticky()
    {
        currentCount++;
        _baseService.ToastShow("message here", "title here", ToastType.Success, true);
    }

    private void ErrorSticky()
    {
        currentCount++;
        _baseService.ToastShow("message here", "title here", ToastType.Danger, true);
    }

    private void InfoSticky()
    {
        currentCount++;
        _baseService.ToastShow("message here", "title here", ToastType.Info, true);
    }

    private async Task Save()
    {
        _baseService.Show();
        
         await Task.Delay(5000);
         NavigationManager.NavigateTo("Home");
         _baseService.Hide();
    }
}
