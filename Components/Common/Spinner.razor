@rendermode InteractiveServer
@using BlazorPopUpOnLoadPoC.Misc
@using System.Timers

<style>

	.loading-container {
		z-index: 5000;
		width: 100vw;
		height: 100vh;
	}

	.loading-overlay {
		position: fixed;
		top: 0;
		left: 0;
		background: rgba(0,0,0,0.8);
		z-index: 4000;
		width: 100%;
		height: 100%;
	}

	.icon-container {
		text-align: center;
		margin-top: 200px;
	}

	.text-container {
		color: white;
		text-align: center;
		font-size: 2em;
		font-weight: 100;
		margin-top: 200px;
	}

	.icon {
		max-width: 120px;
	}

	.hidden {
		display: none;
	}

</style>

@inject BaseService _baseService

<div class="loading-overlay @hiddenClass">
	<div class="loading-container">
		<div class="icon-container">
			<img src="wvsto-seal.png" height="90" width="90" class="pulse" />
		</div>
	</div>
</div>


@code
{
	[Parameter]
	public string Text { get; set; } = "Loading...";

	private string hiddenClass = "hidden";

	protected override void OnInitialized()
	{
		_baseService.OnShow += ShowLoadingSpinner;
		_baseService.OnHide += HideLoadingSpinner;
	}

	public void ShowLoadingSpinner()
	{
		hiddenClass = string.Empty;
		StateHasChanged();
	}

	public void HideLoadingSpinner()
	{
		hiddenClass = "hidden";
		StateHasChanged();
	}
}